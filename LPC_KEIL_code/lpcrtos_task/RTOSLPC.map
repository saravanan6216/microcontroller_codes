ARM Linker, 5.02 [Build 28] [MDK-ARM Lite]

==============================================================================

Section Cross References

    startup.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(RESET) refers to portasm.o(PORT_ASM) for vPortYieldProcessor
    startup.o(RESET) refers to startup.o(STACK) for Stack_Top
    startup.o(RESET) refers to __main.o(!!!main) for __main
    startup.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(.text) refers to startup.o(HEAP) for Heap_Mem
    startup.o(.text) refers to startup.o(STACK) for Stack_Mem
    queue.o(.text) refers to port.o(.text) for vPortEnterCritical
    queue.o(.text) refers to tasks.o(.text) for xTaskRemoveFromEventList
    queue.o(.text) refers to portasm.o(PORT_ASM) for vPortYield
    queue.o(.text) refers to list.o(.text) for vListInitialise
    queue.o(.text) refers to heap_2.o(.text) for pvPortMalloc
    queue.o(.text) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    tasks.o(.text) refers to list.o(.text) for vListInitialise
    tasks.o(.text) refers to port.o(.text) for vPortEnterCritical
    tasks.o(.text) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(.text) refers to aeabi_memset.o(.text) for __aeabi_memset
    tasks.o(.text) refers to heap_2.o(.text) for pvPortMalloc
    tasks.o(.text) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(.text) refers to tasks.o(.data) for pxDelayedTaskList
    port.o(.text) refers to portasm.o(PORT_ASM) for vPortStartFirstTask
    port.o(.text) refers to port.o(.data) for ulCriticalNesting
    portasm.o(PORT_ASM) refers to tasks.o(.data) for pxCurrentTCB
    portasm.o(PORT_ASM) refers to port.o(.data) for ulCriticalNesting
    portasm.o(PORT_ASM) refers to tasks.o(.text) for vTaskSwitchContext
    heap_2.o(.text) refers to tasks.o(.text) for vTaskSuspendAll
    heap_2.o(.text) refers to heap_2.o(.bss) for ucHeap
    heap_2.o(.text) refers to heap_2.o(.data) for xStart
    main.o(.text) refers to queue.o(.text) for xQueueGenericReceive
    main.o(.text) refers to tasks.o(.text) for vTaskDelay
    main.o(.text) refers to main.o(.data) for xMutex
    rt_memcpy.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset.o(.text) refers to rt_memclr.o(.text) for _memset
    __main.o(!!!main) refers to rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text) for main
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    rtentry4.o(.ARM.exidx) refers to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002A) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000008) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000F) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000031) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$0000000E) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000024) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000025) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000006) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000009) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to __raise.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Adding Veneers to the image

    Adding AT veneer (8 bytes, Inline) for call to '__rt_lib_init' from rtentry2.o(.ARM.Collect$$rtentry$$0000000A).
    Adding AT veneer (8 bytes, Inline) for call to '__rt_lib_shutdown' from rtexit2.o(.ARM.Collect$$rtexit$$00000003).
    Adding TA veneer (4 bytes, Inline) for call to '__rt_exit' from exit.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '_sys_exit' from rtexit2.o(.ARM.Collect$$rtexit$$00000004).

4 Veneer(s) (total 28 bytes) added to the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      260  startup.o(RESET)
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtentry.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    Startup.s                                0x00000000   Number         0  startup.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    heap_2.c                                 0x00000000   Number         0  heap_2.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    portASM.s                                0x00000000   Number         0  portasm.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    Undef_Handler                            0x00000040   ARM Code       4  startup.o(RESET)
    PAbt_Handler                             0x00000048   ARM Code       4  startup.o(RESET)
    DAbt_Handler                             0x0000004c   ARM Code       4  startup.o(RESET)
    IRQ_Handler                              0x00000050   ARM Code       4  startup.o(RESET)
    FIQ_Handler                              0x00000054   ARM Code       4  startup.o(RESET)
    !!!main                                  0x00000104   Section        8  __main.o(!!!main)
    !!!scatter                               0x0000010c   Section       60  __scatter.o(!!!scatter)
    !!handler_copy                           0x00000148   Section       40  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x00000170   Section       44  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x000001a4   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000008          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000008)
    .ARM.Collect$$libinit$$0000000A          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000F          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    .ARM.Collect$$libinit$$00000011          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$0000002A          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002A)
    .ARM.Collect$$libinit$$0000002C          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000031          0x000001a6   Section       12  libinit2.o(.ARM.Collect$$libinit$$00000031)
    .ARM.Collect$$libshutdown$$00000000      0x000001bc   Section        4  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000003      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    .ARM.Collect$$libshutdown$$00000006      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000006)
    .ARM.Collect$$libshutdown$$00000009      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000009)
    .ARM.Collect$$libshutdown$$0000000B      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B)
    .ARM.Collect$$libshutdown$$0000000E      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E)
    .ARM.Collect$$libshutdown$$0000000F      0x000001c0   Section        6  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$rtentry$$00000000          0x000001c8   Section        0  rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x000001c8   Section        0  rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x000001c8   Section        8  rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x000001d0   Section        0  rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x000001d0   Section        4  rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x000001d4   Section        0  rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x000001d4   Section       40  rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x00000200   Section        4  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000204   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000204   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000208   Section        8  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x00000210   Section       32  startup.o(.text)
    .text                                    0x00000230   Section        0  queue.o(.text)
    prvInitialiseNewQueue                    0x000002ec   ARM Code      76  queue.o(.text)
    prvUnlockQueue                           0x00000398   ARM Code     232  queue.o(.text)
    prvIsQueueFull                           0x00000480   ARM Code      56  queue.o(.text)
    prvCopyDataToQueue                       0x000004b8   ARM Code     244  queue.o(.text)
    prvInitialiseMutex                       0x00000728   ARM Code      60  queue.o(.text)
    prvIsQueueEmpty                          0x00000934   ARM Code      52  queue.o(.text)
    prvCopyDataFromQueue                     0x00000968   ARM Code      88  queue.o(.text)
    .text                                    0x00000d7c   Section        0  tasks.o(.text)
    prvInitialiseTaskLists                   0x00000d7c   ARM Code     112  tasks.o(.text)
    prvAddNewTaskToReadyList                 0x00000dec   ARM Code     272  tasks.o(.text)
    prvInitialiseNewTask                     0x00000efc   ARM Code     248  tasks.o(.text)
    prvResetNextTaskUnblockTime              0x00001098   ARM Code      88  tasks.o(.text)
    prvDeleteTCB                             0x000010f0   ARM Code      32  tasks.o(.text)
    prvAddCurrentTaskToDelayedList           0x0000150c   ARM Code     184  tasks.o(.text)
    prvTaskIsTaskSuspended                   0x00001a94   ARM Code     124  tasks.o(.text)
    prvCheckTasksWaitingTermination          0x00001cac   ARM Code     160  tasks.o(.text)
    prvIdleTask                              0x00001d4c   ARM Code      32  tasks.o(.text)
    prvTaskCheckFreeStackSpace               0x00001e6c   ARM Code      48  tasks.o(.text)
    prvListTasksWithinSingleList             0x00001f7c   ARM Code     188  tasks.o(.text)
    .text                                    0x00002b7c   Section        0  list.o(.text)
    .text                                    0x00002c90   Section        0  port.o(.text)
    prvSetupTimerInterrupt                   0x00002d7c   ARM Code     100  port.o(.text)
    .text                                    0x00002e88   Section        0  heap_2.o(.text)
    prvHeapInit                              0x00002e88   ARM Code      72  heap_2.o(.text)
    .text                                    0x00003094   Section        0  main.o(.text)
    .text                                    0x000033a4   Section      212  rt_memcpy.o(.text)
    .text                                    0x00003478   Section       16  aeabi_memset.o(.text)
    .text                                    0x00003488   Section        0  heapauxi.o(.text)
    .text                                    0x00003490   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x000034f4   Section       64  rt_memclr.o(.text)
    .text                                    0x00003534   Section       84  rt_memclr_w.o(.text)
    .text                                    0x00003588   Section       96  sys_stackheap_outer.o(.text)
    .text                                    0x000035e8   Section        0  exit.o(.text)
    .text                                    0x000035f4   Section       12  libspace.o(.text)
    .text                                    0x00003608   Section        0  sys_exit.o(.text)
    .text                                    0x00003614   Section        4  use_no_semi.o(.text)
    .text                                    0x00003618   Section        0  indicate_semi.o(.text)
    PORT_ASM                                 0x00003618   Section      396  portasm.o(PORT_ASM)
    .data                                    0x40000000   Section       60  tasks.o(.data)
    uxDeletedTasksWaitingCleanUp             0x40000004   Data           4  tasks.o(.data)
    uxCurrentNumberOfTasks                   0x40000008   Data           4  tasks.o(.data)
    xTickCount                               0x4000000c   Data           4  tasks.o(.data)
    uxTopReadyPriority                       0x40000010   Data           4  tasks.o(.data)
    xSchedulerRunning                        0x40000014   Data           4  tasks.o(.data)
    uxPendedTicks                            0x40000018   Data           4  tasks.o(.data)
    xYieldPending                            0x4000001c   Data           4  tasks.o(.data)
    xNumOfOverflows                          0x40000020   Data           4  tasks.o(.data)
    uxTaskNumber                             0x40000024   Data           4  tasks.o(.data)
    xNextTaskUnblockTime                     0x40000028   Data           4  tasks.o(.data)
    xIdleTaskHandle                          0x4000002c   Data           4  tasks.o(.data)
    uxSchedulerSuspended                     0x40000030   Data           4  tasks.o(.data)
    pxDelayedTaskList                        0x40000034   Data           4  tasks.o(.data)
    pxOverflowDelayedTaskList                0x40000038   Data           4  tasks.o(.data)
    .data                                    0x4000003c   Section        4  port.o(.data)
    .data                                    0x40000040   Section       24  heap_2.o(.data)
    xFreeBytesRemaining                      0x40000040   Data           4  heap_2.o(.data)
    xHeapHasBeenInitialised                  0x40000044   Data           4  heap_2.o(.data)
    xStart                                   0x40000048   Data           8  heap_2.o(.data)
    xEnd                                     0x40000050   Data           8  heap_2.o(.data)
    .data                                    0x40000058   Section        4  main.o(.data)
    .bss                                     0x4000005c   Section      180  tasks.o(.bss)
    pxReadyTasksLists                        0x4000005c   Data          80  tasks.o(.bss)
    xDelayedTaskList1                        0x400000ac   Data          20  tasks.o(.bss)
    xDelayedTaskList2                        0x400000c0   Data          20  tasks.o(.bss)
    xPendingReadyList                        0x400000d4   Data          20  tasks.o(.bss)
    xTasksWaitingTermination                 0x400000e8   Data          20  tasks.o(.bss)
    xSuspendedTaskList                       0x400000fc   Data          20  tasks.o(.bss)
    .bss                                     0x40000110   Section    16384  heap_2.o(.bss)
    ucHeap                                   0x40000110   Data       16384  heap_2.o(.bss)
    .bss                                     0x40004110   Section       96  libspace.o(.bss)
    HEAP                                     0x40004170   Section        0  startup.o(HEAP)
    STACK                                    0x40004170   Section     1568  startup.o(STACK)
    Heap_Mem                                 0x40004170   Data           0  startup.o(HEAP)
    Stack_Mem                                0x40004170   Data        1568  startup.o(STACK)
    Stack_Top                                0x40004790   Data           0  startup.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv1$ARM_ISAv4$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    Reset_Handler                            0x00000058   ARM Code       0  startup.o(RESET)
    __main                                   0x00000104   ARM Code       8  __main.o(!!!main)
    __scatterload                            0x0000010c   ARM Code       0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x0000010c   ARM Code      52  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000120   ARM Code       0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x00000148   ARM Code      40  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x00000170   ARM Code      44  __scatter_zi.o(!!handler_zi)
    Inline ARM to Thumb Veneer to __rt_lib_init 0x0000019c   ARM Code       8  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init                            0x000001a5   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_argv_1                     0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002A)
    __rt_lib_init_atexit_1                   0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_clock_1                    0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_cpp_1                      0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_exceptions_1               0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_fp_1                       0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_getenv_1                   0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_heap_1                     0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000008)
    __rt_lib_init_lc_collate_1               0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    __rt_lib_init_lc_ctype_1                 0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_monetary_1              0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_numeric_1               0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_time_1                  0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_rand_1                     0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_return                     0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000031)
    __rt_lib_init_signal_1                   0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_stdio_1                    0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_user_alloc_1               0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    Inline ARM to Thumb Veneer to __rt_lib_shutdown 0x000001b4   ARM Code       8  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown                        0x000001bd   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_fp_trap_1              0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000006)
    __rt_lib_shutdown_heap_1                 0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E)
    __rt_lib_shutdown_return                 0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_signal_1               0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000009)
    __rt_lib_shutdown_stdio_1                0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    __rt_lib_shutdown_user_alloc_1           0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B)
    __rt_entry                               0x000001c8   ARM Code       0  rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x000001c8   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x000001c8   ARM Code       0  rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x000001d0   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x000001d0   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x000001d4   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x000001d4   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    Inline Thumb to ARM Veneer to __rt_exit  0x000001fd   Thumb Code     4  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit                                0x00000200   ARM Code       0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000204   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000204   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000208   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __user_initial_stackheap                 0x00000210   ARM Code       0  startup.o(.text)
    xQueueGenericReset                       0x00000230   ARM Code     188  queue.o(.text)
    xQueueGenericCreate                      0x00000338   ARM Code      96  queue.o(.text)
    xQueueGenericSend                        0x000005ac   ARM Code     380  queue.o(.text)
    xQueueCreateMutex                        0x00000764   ARM Code      56  queue.o(.text)
    xQueueCreateCountingSemaphore            0x0000079c   ARM Code      56  queue.o(.text)
    xQueueGenericSendFromISR                 0x000007d4   ARM Code     188  queue.o(.text)
    xQueueGiveFromISR                        0x00000890   ARM Code     164  queue.o(.text)
    xQueueGenericReceive                     0x000009c0   ARM Code     488  queue.o(.text)
    xQueueReceiveFromISR                     0x00000ba8   ARM Code     176  queue.o(.text)
    xQueuePeekFromISR                        0x00000c58   ARM Code      76  queue.o(.text)
    uxQueueMessagesWaiting                   0x00000ca4   ARM Code      32  queue.o(.text)
    uxQueueSpacesAvailable                   0x00000cc4   ARM Code      44  queue.o(.text)
    uxQueueMessagesWaitingFromISR            0x00000cf0   ARM Code      12  queue.o(.text)
    vQueueDelete                             0x00000cfc   ARM Code      28  queue.o(.text)
    uxQueueGetQueueNumber                    0x00000d18   ARM Code      12  queue.o(.text)
    vQueueSetQueueNumber                     0x00000d24   ARM Code       8  queue.o(.text)
    ucQueueGetQueueType                      0x00000d2c   ARM Code      12  queue.o(.text)
    xQueueIsQueueEmptyFromISR                0x00000d38   ARM Code      32  queue.o(.text)
    xQueueIsQueueFullFromISR                 0x00000d58   ARM Code      36  queue.o(.text)
    xTaskCreate                              0x00000ff4   ARM Code     164  tasks.o(.text)
    vTaskDelete                              0x00001110   ARM Code     232  tasks.o(.text)
    xTaskIncrementTick                       0x000011f8   ARM Code     440  tasks.o(.text)
    xTaskResumeAll                           0x000013b0   ARM Code     348  tasks.o(.text)
    vTaskSuspendAll                          0x000015c4   ARM Code      24  tasks.o(.text)
    vTaskDelayUntil                          0x000015dc   ARM Code     152  tasks.o(.text)
    vTaskDelay                               0x00001674   ARM Code      64  tasks.o(.text)
    eTaskGetState                            0x000016b4   ARM Code     172  tasks.o(.text)
    uxTaskPriorityGet                        0x00001760   ARM Code      60  tasks.o(.text)
    uxTaskPriorityGetFromISR                 0x0000179c   ARM Code      44  tasks.o(.text)
    vTaskPrioritySet                         0x000017c8   ARM Code     328  tasks.o(.text)
    vTaskSwitchContext                       0x00001910   ARM Code     184  tasks.o(.text)
    vTaskSuspend                             0x000019c8   ARM Code     204  tasks.o(.text)
    vTaskResume                              0x00001b10   ARM Code     240  tasks.o(.text)
    xTaskResumeFromISR                       0x00001c00   ARM Code     172  tasks.o(.text)
    vTaskStartScheduler                      0x00001d6c   ARM Code     116  tasks.o(.text)
    vTaskEndScheduler                        0x00001de0   ARM Code      40  tasks.o(.text)
    xTaskGetTickCount                        0x00001e08   ARM Code      32  tasks.o(.text)
    xTaskGetTickCountFromISR                 0x00001e28   ARM Code      16  tasks.o(.text)
    uxTaskGetNumberOfTasks                   0x00001e38   ARM Code      12  tasks.o(.text)
    pcTaskGetName                            0x00001e44   ARM Code      40  tasks.o(.text)
    vTaskGetTaskInfo                         0x00001e9c   ARM Code     224  tasks.o(.text)
    uxTaskGetSystemState                     0x00002038   ARM Code     228  tasks.o(.text)
    vTaskPlaceOnEventList                    0x0000211c   ARM Code      52  tasks.o(.text)
    vTaskPlaceOnUnorderedEventList           0x00002150   ARM Code      72  tasks.o(.text)
    xTaskRemoveFromEventList                 0x00002198   ARM Code     180  tasks.o(.text)
    xTaskRemoveFromUnorderedEventList        0x0000224c   ARM Code     156  tasks.o(.text)
    vTaskSetTimeOutState                     0x000022e8   ARM Code      28  tasks.o(.text)
    xTaskCheckForTimeOut                     0x00002304   ARM Code     160  tasks.o(.text)
    vTaskMissedYield                         0x000023a4   ARM Code      16  tasks.o(.text)
    uxTaskGetTaskNumber                      0x000023b4   ARM Code      32  tasks.o(.text)
    vTaskSetTaskNumber                       0x000023d4   ARM Code      20  tasks.o(.text)
    uxTaskGetStackHighWaterMark              0x000023e8   ARM Code      64  tasks.o(.text)
    xTaskGetCurrentTaskHandle                0x00002428   ARM Code      12  tasks.o(.text)
    vTaskPriorityInherit                     0x00002434   ARM Code     232  tasks.o(.text)
    xTaskPriorityDisinherit                  0x0000251c   ARM Code     164  tasks.o(.text)
    uxTaskResetEventItemValue                0x000025c0   ARM Code      44  tasks.o(.text)
    pvTaskIncrementMutexHeldCount            0x000025ec   ARM Code      52  tasks.o(.text)
    ulTaskNotifyTake                         0x00002620   ARM Code     180  tasks.o(.text)
    xTaskNotifyWait                          0x000026d4   ARM Code     228  tasks.o(.text)
    xTaskGenericNotify                       0x000027b8   ARM Code     300  tasks.o(.text)
    xTaskGenericNotifyFromISR                0x000028e4   ARM Code     364  tasks.o(.text)
    vTaskNotifyGiveFromISR                   0x00002a50   ARM Code     212  tasks.o(.text)
    xTaskNotifyStateClear                    0x00002b24   ARM Code      88  tasks.o(.text)
    vListInitialise                          0x00002b7c   ARM Code      44  list.o(.text)
    vListInitialiseItem                      0x00002ba8   ARM Code      12  list.o(.text)
    vListInsertEnd                           0x00002bb4   ARM Code      48  list.o(.text)
    vListInsert                              0x00002be4   ARM Code      96  list.o(.text)
    uxListRemove                             0x00002c44   ARM Code      76  list.o(.text)
    pxPortInitialiseStack                    0x00002c90   ARM Code     236  port.o(.text)
    xPortStartScheduler                      0x00002de0   ARM Code      24  port.o(.text)
    vPortEndScheduler                        0x00002df8   ARM Code       4  port.o(.text)
    vPortEnterCritical                       0x00002dfc   ARM Code      36  port.o(.text)
    vPortExitCritical                        0x00002e20   ARM Code      68  port.o(.text)
    pvPortMalloc                             0x00002ed0   ARM Code     300  heap_2.o(.text)
    vPortFree                                0x00002ffc   ARM Code     112  heap_2.o(.text)
    xPortGetFreeHeapSize                     0x0000306c   ARM Code      12  heap_2.o(.text)
    vPortInitialiseBlocks                    0x00003078   ARM Code       4  heap_2.o(.text)
    initserial                               0x00003094   ARM Code      80  main.o(.text)
    sendserial                               0x000030e4   ARM Code      32  main.o(.text)
    sendsserial                              0x00003104   ARM Code      40  main.o(.text)
    rx                                       0x0000312c   ARM Code      32  main.o(.text)
    task3                                    0x0000314c   ARM Code      80  main.o(.text)
    task2                                    0x0000319c   ARM Code      80  main.o(.text)
    task1                                    0x000031ec   ARM Code      80  main.o(.text)
    initpll                                  0x0000323c   ARM Code      96  main.o(.text)
    main                                     0x0000329c   ARM Code     264  main.o(.text)
    __aeabi_memcpy                           0x000033a4   ARM Code       0  rt_memcpy.o(.text)
    __rt_memcpy                              0x000033a4   ARM Code     212  rt_memcpy.o(.text)
    _memcpy_lastbytes                        0x00003458   ARM Code       0  rt_memcpy.o(.text)
    __aeabi_memset                           0x00003478   ARM Code      16  aeabi_memset.o(.text)
    __use_two_region_memory                  0x00003489   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0000348b   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0000348d   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x00003490   ARM Code       0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x00003490   ARM Code       0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x00003490   ARM Code     100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x000034dc   ARM Code       0  rt_memcpy_w.o(.text)
    __aeabi_memclr                           0x000034f4   ARM Code       0  rt_memclr.o(.text)
    __rt_memclr                              0x000034f4   ARM Code      64  rt_memclr.o(.text)
    _memset                                  0x000034f8   ARM Code       0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x00003534   ARM Code       0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x00003534   ARM Code       0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x00003534   ARM Code      84  rt_memclr_w.o(.text)
    _memset_w                                0x00003538   ARM Code       0  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x00003588   ARM Code      96  sys_stackheap_outer.o(.text)
    exit                                     0x000035e9   Thumb Code    12  exit.o(.text)
    __user_libspace                          0x000035f4   ARM Code      12  libspace.o(.text)
    __user_perproc_libspace                  0x000035f4   ARM Code       0  libspace.o(.text)
    __user_perthread_libspace                0x000035f4   ARM Code       0  libspace.o(.text)
    Inline ARM to Thumb Veneer to _sys_exit  0x00003600   ARM Code       8  sys_exit.o(.text)
    _sys_exit                                0x00003609   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x00003614   ARM Code       0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00003614   ARM Code       4  use_no_semi.o(.text)
    __semihosting_library_function           0x00003618   ARM Code       0  indicate_semi.o(.text)
    vPortStartFirstTask                      0x00003618   ARM Code       0  portasm.o(PORT_ASM)
    vPortYield                               0x00003648   ARM Code       0  portasm.o(PORT_ASM)
    vPortYieldProcessor                      0x00003650   ARM Code       0  portasm.o(PORT_ASM)
    vPreemptiveTick                          0x000036dc   ARM Code       0  portasm.o(PORT_ASM)
    Region$$Table$$Base                      0x000037a4   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x000037c4   Number         0  anon$$obj.o(Region$$Table)
    pxCurrentTCB                             0x40000000   Data           4  tasks.o(.data)
    ulCriticalNesting                        0x4000003c   Data           4  port.o(.data)
    xMutex                                   0x40000058   Data           4  main.o(.data)
    __libspace_start                         0x40004110   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x40004170   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000104

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00003820, Max: 0x00080000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x00000000, Size: 0x000037c4, Max: 0x00080000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000104   Code   RO            3    RESET               startup.o
    0x00000104   0x00000008   Code   RO          163  * !!!main             c_t.l(__main.o)
    0x0000010c   0x0000003c   Code   RO          325    !!!scatter          c_t.l(__scatter.o)
    0x00000148   0x00000028   Code   RO          327    !!handler_copy      c_t.l(__scatter_copy.o)
    0x00000170   0x0000002c   Code   RO          329    !!handler_zi        c_t.l(__scatter_zi.o)
    0x0000019c   0x00000008   Ven    RO          196    .ARM.Collect$$libinit$$00000000  c_t.l(libinit.o)
    0x000001a4   0x00000002   Code   RO          196    .ARM.Collect$$libinit$$00000000  c_t.l(libinit.o)
    0x000001a6   0x00000000   Code   RO          203    .ARM.Collect$$libinit$$00000002  c_t.l(libinit2.o)
    0x000001a6   0x00000000   Code   RO          206    .ARM.Collect$$libinit$$00000008  c_t.l(libinit2.o)
    0x000001a6   0x00000000   Code   RO          208    .ARM.Collect$$libinit$$0000000A  c_t.l(libinit2.o)
    0x000001a6   0x00000000   Code   RO          210    .ARM.Collect$$libinit$$0000000C  c_t.l(libinit2.o)
    0x000001a6   0x00000000   Code   RO          213    .ARM.Collect$$libinit$$0000000F  c_t.l(libinit2.o)
    0x000001a6   0x00000000   Code   RO          215    .ARM.Collect$$libinit$$00000011  c_t.l(libinit2.o)
    0x000001a6   0x00000000   Code   RO          217    .ARM.Collect$$libinit$$00000013  c_t.l(libinit2.o)
    0x000001a6   0x00000000   Code   RO          219    .ARM.Collect$$libinit$$00000015  c_t.l(libinit2.o)
    0x000001a6   0x00000000   Code   RO          221    .ARM.Collect$$libinit$$00000017  c_t.l(libinit2.o)
    0x000001a6   0x00000000   Code   RO          223    .ARM.Collect$$libinit$$00000019  c_t.l(libinit2.o)
    0x000001a6   0x00000000   Code   RO          225    .ARM.Collect$$libinit$$0000001B  c_t.l(libinit2.o)
    0x000001a6   0x00000000   Code   RO          227    .ARM.Collect$$libinit$$0000001D  c_t.l(libinit2.o)
    0x000001a6   0x00000000   Code   RO          229    .ARM.Collect$$libinit$$0000001F  c_t.l(libinit2.o)
    0x000001a6   0x00000000   Code   RO          231    .ARM.Collect$$libinit$$00000021  c_t.l(libinit2.o)
    0x000001a6   0x00000000   Code   RO          233    .ARM.Collect$$libinit$$00000023  c_t.l(libinit2.o)
    0x000001a6   0x00000000   Code   RO          237    .ARM.Collect$$libinit$$0000002A  c_t.l(libinit2.o)
    0x000001a6   0x00000000   Code   RO          239    .ARM.Collect$$libinit$$0000002C  c_t.l(libinit2.o)
    0x000001a6   0x00000000   Code   RO          241    .ARM.Collect$$libinit$$0000002E  c_t.l(libinit2.o)
    0x000001a6   0x00000000   Code   RO          243    .ARM.Collect$$libinit$$00000030  c_t.l(libinit2.o)
    0x000001a6   0x0000000c   Code   RO          244    .ARM.Collect$$libinit$$00000031  c_t.l(libinit2.o)
    0x000001b2   0x00000002   PAD
    0x000001b4   0x00000008   Ven    RO          264    .ARM.Collect$$libshutdown$$00000000  c_t.l(libshutdown.o)
    0x000001bc   0x00000004   Code   RO          264    .ARM.Collect$$libshutdown$$00000000  c_t.l(libshutdown.o)
    0x000001c0   0x00000000   Code   RO          278    .ARM.Collect$$libshutdown$$00000003  c_t.l(libshutdown2.o)
    0x000001c0   0x00000000   Code   RO          281    .ARM.Collect$$libshutdown$$00000006  c_t.l(libshutdown2.o)
    0x000001c0   0x00000000   Code   RO          284    .ARM.Collect$$libshutdown$$00000009  c_t.l(libshutdown2.o)
    0x000001c0   0x00000000   Code   RO          286    .ARM.Collect$$libshutdown$$0000000B  c_t.l(libshutdown2.o)
    0x000001c0   0x00000000   Code   RO          289    .ARM.Collect$$libshutdown$$0000000E  c_t.l(libshutdown2.o)
    0x000001c0   0x00000006   Code   RO          290    .ARM.Collect$$libshutdown$$0000000F  c_t.l(libshutdown2.o)
    0x000001c6   0x00000002   PAD
    0x000001c8   0x00000000   Code   RO          165    .ARM.Collect$$rtentry$$00000000  c_t.l(rtentry.o)
    0x000001c8   0x00000000   Code   RO          171    .ARM.Collect$$rtentry$$00000002  c_t.l(rtentry2.o)
    0x000001c8   0x00000008   Code   RO          183    .ARM.Collect$$rtentry$$00000004  c_t.l(rtentry4.o)
    0x000001d0   0x00000000   Code   RO          173    .ARM.Collect$$rtentry$$00000009  c_t.l(rtentry2.o)
    0x000001d0   0x00000004   Code   RO          174    .ARM.Collect$$rtentry$$0000000A  c_t.l(rtentry2.o)
    0x000001d4   0x00000000   Code   RO          176    .ARM.Collect$$rtentry$$0000000C  c_t.l(rtentry2.o)
    0x000001d4   0x00000028   Code   RO          177    .ARM.Collect$$rtentry$$0000000D  c_t.l(rtentry2.o)
    0x000001fc   0x00000004   Ven    RO          200    .ARM.Collect$$rtexit$$00000000  c_t.l(rtexit.o)
    0x00000200   0x00000004   Code   RO          200    .ARM.Collect$$rtexit$$00000000  c_t.l(rtexit.o)
    0x00000204   0x00000000   Code   RO          246    .ARM.Collect$$rtexit$$00000002  c_t.l(rtexit2.o)
    0x00000204   0x00000004   Code   RO          247    .ARM.Collect$$rtexit$$00000003  c_t.l(rtexit2.o)
    0x00000208   0x00000008   Code   RO          248    .ARM.Collect$$rtexit$$00000004  c_t.l(rtexit2.o)
    0x00000210   0x00000020   Code   RO            4    .text               startup.o
    0x00000230   0x00000b4c   Code   RO           11    .text               queue.o
    0x00000d7c   0x00001e00   Code   RO           69    .text               tasks.o
    0x00002b7c   0x00000114   Code   RO           91    .text               list.o
    0x00002c90   0x000001f8   Code   RO          103    .text               port.o
    0x00002e88   0x0000020c   Code   RO          121    .text               heap_2.o
    0x00003094   0x00000310   Code   RO          136    .text               main.o
    0x000033a4   0x000000d4   Code   RO          157    .text               c_t.l(rt_memcpy.o)
    0x00003478   0x00000010   Code   RO          159    .text               c_t.l(aeabi_memset.o)
    0x00003488   0x00000006   Code   RO          161    .text               c_t.l(heapauxi.o)
    0x0000348e   0x00000002   PAD
    0x00003490   0x00000064   Code   RO          166    .text               c_t.l(rt_memcpy_w.o)
    0x000034f4   0x00000040   Code   RO          168    .text               c_t.l(rt_memclr.o)
    0x00003534   0x00000054   Code   RO          185    .text               c_t.l(rt_memclr_w.o)
    0x00003588   0x00000060   Code   RO          187    .text               c_t.l(sys_stackheap_outer.o)
    0x000035e8   0x0000000c   Code   RO          189    .text               c_t.l(exit.o)
    0x000035f4   0x0000000c   Code   RO          197    .text               c_t.l(libspace.o)
    0x00003600   0x00000008   Ven    RO          256    .text               c_t.l(sys_exit.o)
    0x00003608   0x0000000c   Code   RO          256    .text               c_t.l(sys_exit.o)
    0x00003614   0x00000004   Code   RO          267    .text               c_t.l(use_no_semi.o)
    0x00003618   0x00000000   Code   RO          269    .text               c_t.l(indicate_semi.o)
    0x00003618   0x0000018c   Code   RO          118    PORT_ASM            portasm.o
    0x000037a4   0x00000020   Data   RO          323    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x40000000, Size: 0x00004790, Max: 0x00008000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x40000000   0x0000003c   Data   RW           71    .data               tasks.o
    0x4000003c   0x00000004   Data   RW          104    .data               port.o
    0x40000040   0x00000018   Data   RW          123    .data               heap_2.o
    0x40000058   0x00000004   Data   RW          137    .data               main.o
    0x4000005c   0x000000b4   Zero   RW           70    .bss                tasks.o
    0x40000110   0x00004000   Zero   RW          122    .bss                heap_2.o
    0x40004110   0x00000060   Zero   RW          198    .bss                c_t.l(libspace.o)
    0x40004170   0x00000000   Zero   RW            2    HEAP                startup.o
    0x40004170   0x00000620   Zero   RW            1    STACK               startup.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       524         24          0         24      16384       2868   heap_2.o
       276          0          0          0          0       1658   list.o
       784        100          0          4          0       3759   main.o
       504         36          0          4          0       2515   port.o
       396         24          0          0          0        196   portasm.o
      2892          0          0          0          0      27633   queue.o
       292         60          0          0       1568        436   startup.o
      7680         96          0         60        180      21067   tasks.o

    ----------------------------------------------------------------------
     13348        340         32         92      18132      60132   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         0          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
        60          8          0          0          0          0   __scatter.o
        40          0          0          0          0          0   __scatter_copy.o
        44          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset.o
        12          0          0          0          0         64   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
        10          0          0          0          0          0   libinit.o
        12          0          0          0          0          0   libinit2.o
        12          0          0          0          0          0   libshutdown.o
         6          0          0          0          0          0   libshutdown2.o
        12          4          0          0         96         68   libspace.o
        64          0          0          0          0         68   rt_memclr.o
        84          0          0          0          0         80   rt_memclr_w.o
       212          0          0          0          0         68   rt_memcpy.o
       100          0          0          0          0         80   rt_memcpy_w.o
         0          0          0          0          0          0   rtentry.o
        44          4          0          0          0          0   rtentry2.o
         8          0          0          0          0          0   rtentry4.o
         8          0          0          0          0          0   rtexit.o
        12          0          0          0          0          0   rtexit2.o
        20          4          0          0          0         60   sys_exit.o
        96          0          0          0          0         80   sys_stackheap_outer.o
         4          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       896         20          0          0         96        908   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       890         20          0          0         96        908   c_t.l

    ----------------------------------------------------------------------
       896         20          0          0         96        908   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     14244        360         32         92      18228      59808   Grand Totals
     14244        360         32         92      18228      59808   ELF Image Totals
     14244        360         32         92          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                14276 (  13.94kB)
    Total RW  Size (RW Data + ZI Data)             18320 (  17.89kB)
    Total ROM Size (Code + RO Data + RW Data)      14368 (  14.03kB)

==============================================================================

